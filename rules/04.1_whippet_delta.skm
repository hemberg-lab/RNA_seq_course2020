import yaml

if "whippet_delta" in config:
   with open(config["whippet_delta"], 'r') as stream:
      whippet_delta = yaml.safe_load(stream)   


def condition_to_sample(wildcards):


   
comparison_names = config["diffexp"]["contrasts"].keys()

rule differential_inclusion_ref:
   input:
      expand("Whippet/Delta/ref/{comparison_name}.diff.gz", comparison_name=comparison_names)

                       
rule whippet_delta_ref:
   input:
      lambda wildcards : expand("Whippet/Quant/ref/{sample}.psi.gz", sample= config["diffexp"]["contrasts"][wildcards.comparison_name][0].split(",")),
      lambda wildcards : expand("Whippet/Quant/ref/{sample}.psi.gz", sample= config["diffexp"]["contrasts"][wildcards.comparison_name][1].split(","))
   output:
      "Whippet/Delta/ref/{config["diffexp"]["contrasts"][wildcards.comparison_name]}.diff.gz"
   params:
      bin = config["whippet_bin_folder"],
      a = lambda wildcards : ",".join(expand("Whippet/Quant/ref/{sample}.psi.gz", sample= whippet_delta[wildcards.comparison_name][0].split(","))),
      b = lambda wildcards : ",".join(expand("Whippet/Quant/ref/{sample}.psi.gz", sample= whippet_delta[wildcards.comparison_name][1].split(","))),
      o = lambda wildcards : "Whippet/Delta/ref/" + wildcards.comparison_name
   shell:
      "julia {params.bin}/whippet-delta.jl -a {params.a} -b {params.b} -o {params.o}"
